AWSTemplateFormatVersion: '2010-09-09'
Description: API Gateway privado con Lambda "Hola mundo"

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetIdPrivate:
    Type: AWS::EC2::Subnet::Id
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group para el VPC Endpoint

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRoleHolaMundo
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InlineLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  HolaMundoLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: HolaMundoLambda
      Runtime: nodejs18.x
      Role: !GetAtt LambdaExecutionRole.Arn
      Handler: index.handler
      Code:
        ZipFile: |
          exports.handler = async (event) => {
              return {
                  statusCode: 200,
                  body: "Hola mundo desde Lambda!"
              };
          };

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: HolaMundoApi
      EndpointConfiguration:
        Types:
          - PRIVATE

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGateway
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: hola

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: 
          Fn::Sub: 
            - arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
            - Region: !Ref "AWS::Region"
              LambdaArn: !GetAtt HolaMundoLambda.Arn

  LambdaApiInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref HolaMundoLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: 
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/*/*

  ApiGatewayVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: 
        Fn::Sub: com.amazonaws.${AWS::Region}.execute-api
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref SubnetIdPrivate
      SecurityGroupIds:
        - !Ref SecurityGroupId
      PrivateDnsEnabled: true

Outputs:
  ApiId:
    Description: ID de la API
    Value: !Ref ApiGateway
  LambdaName:
    Description: Nombre de la Lambda
    Value: !Ref HolaMundoLambda
  VpcEndpointId:
    Description: ID del VPC Endpoint
    Value: !Ref ApiGatewayVPCEndpoint